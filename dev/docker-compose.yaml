version: '3.7'

services:
  wreck_app_dev:
    image: wreck_app:dev
    container_name: wreck_app_dev
    build:
      context: ./app
      dockerfile: Dockerfile.rails
      args:
        - USER_ID
        - GROUP_ID
        - USERNAME
        - USERGROUP
        - HOMEDIR
    deploy:
      resources:
        limits:
          memory: 1024m
    environment:
      - BASE64_ENCODE
      - REFRESH_TOKEN
      - POKILL_DEV_USERNAME
      - POKILL_DEV_PASSWORD
      - POKILL_DEV_DBNAME
      - POKILL_DEV_HOST
      - EVE_DEV_USERNAME
      - EVE_DEV_PASSWORD
      - EVE_DEV_DBNAME
      - EVE_DEV_HOST
      - USER_ID
      - GROUP_ID
      - USERNAME
      - USERGROUP
      - HOMEDIR
    command: bash -c "yarn install --check-files && rails db:migrate && bundle exec puma -C config/puma.rb"
    volumes:
      - ./app/rails:/wreck
      - wreck_tmp_data:/wreck/tmp/sockets
    depends_on:
      - wreck_pg_db_dev
      - wreck_mysql_db_dev

  wreck_cron_dev:
    image: wreck_cron:dev
    container_name: wreck_cron_dev
    build:
      context: ./tasks
      dockerfile: Dockerfile.tasks
    deploy:
      resources:
        limits: 
          memory: 128m
    depends_on:
      - wreck_app_dev
    command: crond -f -l 8 -L /var/log/wreck/cron.log
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log/wreck:/var/log/wreck
      - ./tasks/cron_tasks/15min:/etc/periodic/15min/:ro
      - ./tasks/cron_tasks/weekly:/etc/periodic/weekly/:ro

  wreck_nginx_proxy_dev:
    image: wreck_nginx:dev 
    container_name: wreck_nginx_proxy_dev
    build:
      context: ./proxy
      dockerfile: Dockerfile.nginx
    ports:
      - "8080:8080"
    deploy:
      resources:
        limits:
          memory: 128m
    depends_on:
      - wreck_app_dev
    volumes:
      - wreck_tmp_data:/wreck/tmp/sockets

  wreck_pg_db_dev:
    image: wreck_postgres:dev
    container_name: wreck_postgres_dev
    build:
      context: ./databases
      dockerfile: Dockerfile.pg
    ports:
      - 5432
    deploy:
      resources:
        limits:
          memory: 256m
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - wreck_pg_data:/var/lib/postgresql/data

  wreck_mysql_db_dev:
    image: wreck_mysql:dev
    container_name: wreck_mysql_dev
    build:
      context: ./databases
      dockerfile: Dockerfile.mysql
    deploy:
      resources:
        limits:
          memory: 128m
    environment:
      - MYSQL_DATABASE
      - MYSQL_ROOT_PASSWORD
      - MYSQL_USER
      - MYSQL_PASSWORD
    volumes:
      - wreck_mysql_data:/var/lib/mysql

volumes:
  wreck_pg_data:
  wreck_mysql_data:
  wreck_tmp_data:
